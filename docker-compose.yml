version: '3.3'
services:

  front:
    container_name: "front"
    image: front:latest
    ports:
     - "80:80"
     - "443:443"
    networks:
      - mynet
    volumes:
      - ./dist/iti0302-front-end:/usr/share/nginx/html
      - ./certbot/conf:/etc/nginx/ssl
      - ./certbot/data:/var/www/certbot

  certbot:
    image: certbot/certbot:latest
    command: certonly --webroot --webroot-path=/dist/iti0302-front-end --email petarv@ttu.ee --agree-tos --no-eff-email -d stockbooster.ml -d stockbooster.ml
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/logs:/var/log/letsencrypt
      - ./certbot/data:/var/www/certbot
  API:
    image: bootdocker:staging
    container_name: "back"
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_PROFILES_ACTIVE=local
      - AWS_REGION=local
      - ENVIRONMENT=local
    networks:
      - mynet
    restart: always

  db:
    image: postgres:latest
    container_name: "postgres"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_ROOT_PASSWORD=postgres

    user: postgres
    ports:
      - "5632:5432"
    healthcheck:
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    networks:
      - mynet
networks:
  mynet:
    driver: bridge


